---
import { ViewTransitions } from 'astro:transitions'
import Navbar from '../components/Navbar/Navbar.astro'
import Sidebar from '../components/Navbar/Sidebar.astro'

import '../styles/global.css'

interface Props {
  pageTitle?: string
  pageDescription?: string
}

const { pageTitle, pageDescription } = Astro.props
---

<!DOCTYPE html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <meta name='description' content={pageDescription} />
    <meta name='generator' content={pageDescription} />
    <meta name='author' content='Esteban Mutis' />
    <meta
      name='keywords'
      content='política,
      noticias políticas,
      análisis político,
      elecciones,
      gobierno,
      políticos,
      sociedad,
      legislación,
      políticas públicas,
      debate político,
      edil,
      usaquén'
    />
    <meta name='theme-color' content='#301691' />
    <title>Juan Poloche {pageTitle}</title>
    <link rel='icon' type='image' href='/imgs/test-minilogo-transparent.webp' />
    <link rel='manifest' href='/manifest.json' />
    <meta name='view-transitions' content='same-origin' />

    <script>
      window.addEventListener('load', () => {
        const imagesToPreload = ['/imgs/bg1.webp', '/imgs/bg2.webp', '/imgs/bg3.webp']

        imagesToPreload.forEach((imageUrl) => {
          const image = new Image()
          image.src = imageUrl
        })
      })
    </script>

    <script async src='https://www.googletagmanager.com/gtag/js?id=G-4HENYJB6RJ'></script>
    <script>
      window.dataLayer = window.dataLayer || []
      function gtag() {
        dataLayer.push(arguments)
      }
      gtag('js', new Date())
      gtag('config', 'G-4HENYJB6RJ')
    </script>

    <ViewTransitions />
  </head>

  <body>
    <Navbar />
    <Sidebar />
    <slot />
  </body>
</html>

<style is:global>

</style>

<script src="../utils/index.js">
if ('serviceWorker' in navigator) {
	window.addEventListener('load', () => {
		navigator.serviceWorker.register('/service-worker.js').catch((error) => {
			console.log('Error al registrar el Service Worker:', error)
		})
	})
}
</script>
